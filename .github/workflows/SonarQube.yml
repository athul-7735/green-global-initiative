name: SonarQube Analysis

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
  pull_request: # Still runs on pull request events
    branches:
      - main
  push: # Also runs on pushes to the main branch
    branches:
      - main

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Java (if your project uses Java)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      # Install SonarScanner
      - name: Install SonarScanner
        run: |
          curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH

      # Run SonarQube Analysis
      - name: Run SonarQube Scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your-project-key \
            -Dsonar.organization=your-organization-key \
            -Dsonar.sources=. \
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number || '0' }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref || github.ref_name }} \
            -Dsonar.pullrequest.base=${{ github.base_ref || 'main' }} \
            -Dsonar.pullrequest.provider=github \
            -Dsonar.pullrequest.github.repository=${{ github.repository }}

      # Post Results (Optional: Quality Gate)
      - name: Check SonarQube Quality Gate Status
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=your-project-key" | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $STATUS"
          if [[ "$STATUS" != "OK" ]]; then
            echo "Quality Gate failed!"
            exit 1
          fi

name: Run Selenium Tests on Push

on:
  push:
    branches:
      - Testing
  workflow_dispatch: # Trigger the workflow manually

jobs:
  run-selenium-tests:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Install Maven Dependencies
      run: mvn clean install -f nggi-automation/pom.xml

    - name: Install Chocolatey (if not present)
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install Microsoft Edge Browser
      run: |
        choco install microsoft-edge -y --no-progress

    - name: Install Edge WebDriver
      run: |
        # Get installed Edge version
        $edgeVersion = (Get-Item (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\msedge.exe').'(Default)').VersionInfo.ProductVersion
        # Download matching WebDriver
        Invoke-WebRequest "https://msedgedriver.azureedge.net/$edgeVersion/edgedriver_win64.zip" -OutFile edgedriver.zip
        Expand-Archive edgedriver.zip -DestinationPath "C:\SeleniumWebDrivers\EdgeDriver\" -Force
        Add-Content $env:GITHUB_PATH "C:\SeleniumWebDrivers\EdgeDriver"

    - name: Verify WebDriver Installation
      run: |
        echo "WebDriver location:"
        dir "C:\SeleniumWebDrivers\EdgeDriver\"
        echo "WebDriver version:"
        C:\SeleniumWebDrivers\EdgeDriver\msedgedriver.exe --version

    - name: Run Selenium Tests with TestNG
      run: |
        Write-Output "Checking testng.xml exists..."
        Get-ChildItem -Path .\nggi-automation\testng.xml
        mvn test -f nggi-automation\pom.xml -DsuiteXmlFiles="$env:GITHUB_WORKSPACE\nggi-automation\testng.xml"

    - name: Archive Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: selenium-test-results
        path: nggi-automation/target/surefire-reports/*
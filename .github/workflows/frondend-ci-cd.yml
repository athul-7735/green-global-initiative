name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - NGGI-112-ci-yaml-file-integration-with-all-the-tools-frontend-ui
  pull_request:
    branches:
      - NGGI-112-ci-yaml-file-integration-with-all-the-tools-frontend-ui

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Debug directory structure
      run: ls -la

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Use Node.js 18.x (required for Angular CLI)

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install dependencies
      run: npm install --prefix green-global-initiative-ui

    - name: Build the project
      run: npm run build --prefix green-global-initiative-ui

    - name: Run Tests in Headless Mode
      run: npm test --prefix green-global-initiative-ui -- --browsers=ChromeHeadless --watch=false || true
  

#    - name: Run integration tests
 #    run: npm run integration-test --prefix green-global-initiative-ui

  #  - name: Check code coverage
  #    run: npm run coverage --prefix green-global-initiative-ui
 #     env:
  #      COVERAGE_THRESHOLD: 40 # Set your desired coverage threshold
#
  #  - name: SonarQube Scan
  #    uses: SonarSource/sonarcloud-github-action@master
 #     env:
 #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 #     with:
   #     args: >
  #        -Dsonar.projectKey=your_project_key
  #        -Dsonar.organization=your_organization
  #        -Dsonar.host.url=https://sonarcloud.io
  #        -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME}}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t frontend_ui:latest .  # Replace with your preferred image name and tag

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'frontend_ui:latest'  # Use the image name you just built
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'green-global-initiative'  # Replace with your actual project name
        format: 'ALL'
        fail_on_cvss: 7

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: green-global-initiative-ui/test-results

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: green-global-initiative-ui/coverage

    - name: Fail if code coverage is below threshold
      run: |
        if [ "$(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc)" -eq 1 ]; then
          echo "Code coverage is below the threshold of $COVERAGE_THRESHOLD%"
          exit 1
        fi
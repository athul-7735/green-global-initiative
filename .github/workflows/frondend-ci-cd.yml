name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - NGGI-112-ci-yaml-file-integration-with-all-the-tools-frontend-ui
  pull_request:
    branches:
      - NGGI-112-ci-yaml-file-integration-with-all-the-tools-frontend-ui

jobs:
  build:
    runs-on: [self-hosted]
    permissions:
      contents: write

    env:
      COVERAGE_THRESHOLD: 50  # Set your desired coverage threshold here

    steps:
      # Step to check if folder exists and remove it
      - name: Remove folder if it exists
        run: |
          if [ -d "/home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/reports" ]; then
            sudo rm -rf /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/reports
            echo "Folder deleted."
          else
            echo "Folder does not exist. Skipping deletion."
          fi
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.G_TOKEN }}

      - name: Print working directory
        run: pwd

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./green-global-initiative/green-global-initiative/green-global-initiative-ui/node_modules
          key: npm-${{ hashFiles('green-global-initiative/green-global-initiative/green-global-initiative-ui/package-lock.json') }}
          restore-keys: |
            npm-

      - name: Install dependencies
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: npm install

      - name: Install Angular CLI locally
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: npm install @angular/cli --save-dev

      - name: Build the project
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: npm run build

      - name: Create test-results directory
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: mkdir -p test-results

      - name: Run Tests in Headless Mode
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: |
          npm test -- --browsers=ChromeHeadless --watch=false --code-coverage --karma-config=karma.conf.js --reporters junit || true

      - name: Extract Coverage Percentage
        id: coverage
        run: |
          if [ -f "/home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui/coverage/lcov.info" ]; then
            echo "lcov.info file found."
            COVERAGE=$(grep -Eo 'lines\.*: [0-9.]+%' /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui/coverage/lcov.info | awk '{print $2}' | sed 's/%//')
            echo "Extracted coverage: $COVERAGE%"
            echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          else
            echo "Error: lcov.info file not found."
            exit 1
          fi

      - name: Fail if code coverage is below threshold
        run: |
          if [ -z "$COVERAGE" ]; then
            echo "Error: COVERAGE variable is not set."
            exit 1
          fi

          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
            echo "Code coverage is below the threshold of $COVERAGE_THRESHOLD%"
            exit 1
          else
            echo "Code coverage is $COVERAGE%, which meets the threshold of $COVERAGE_THRESHOLD%"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Trivy File Scan
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: trivy fs . --severity HIGH,CRITICAL --ignore-unfixed > trivyfs-backend.txt

      - name: Build Docker image
        working-directory: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest

      - name: Trivy Image Scan
        run: trivy image ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:${{ github.sha }} --severity HIGH,CRITICAL > trivyimage-frontend.txt

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'green-global-initiative'
          format: 'ALL'
          fail_on_cvss: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui/test-results

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: /home/ubuntu/actions-runner/frontend/green-global-initiative/green-global-initiative/green-global-initiative-ui/coverage